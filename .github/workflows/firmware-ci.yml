name: Firmware Check

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'app/build.gradle'
      - 'gradle/libs.versions.toml'
      - '.github/workflows/firmware-ci.yml'
      - 'README.md'
  workflow_dispatch:

jobs:
  firmware:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [ default, debug ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Firmware Cache
        uses: actions/cache@v4
        with:
          path: app/src/main/assets/roms
          key: firmware-${{ matrix.variant }}-${{ secrets.QEMU_VARS_SHA256 || 'nohash' }}
          restore-keys: |
            firmware-${{ matrix.variant }}-
            firmware-
      - name: Firmware Fetch + Verify (matrix variant)
        env:
          QEMU_VARS_URL: ${{ secrets.QEMU_VARS_URL }}
          QEMU_VARS_SHA256: ${{ secrets.QEMU_VARS_SHA256 }}
          RELEASEX64_OVMF_VARS_URL: ${{ secrets.RELEASEX64_OVMF_VARS_URL }}
          RELEASEX64_OVMF_VARS_SHA256: ${{ secrets.RELEASEX64_OVMF_VARS_SHA256 }}
          QEMU_VARS_VARIANT: ${{ matrix.variant }}
        run: ./gradlew :app:ciAllFirmwareCheck :app:assertNoSampleFirmwareSha -PfirmwareVariant=${{ matrix.variant }} --no-daemon --stacktrace
      - name: Print Primary Firmware Hash
        run: ./gradlew :app:printFirmwareSha256 -PfirmwareVariant=${{ matrix.variant }} --no-daemon
  secure-firmware:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: firmware
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Secure Firmware Quality Gate
        env:
          QEMU_VARS_URL: ${{ secrets.QEMU_VARS_URL }}
          QEMU_VARS_SHA256: ${{ secrets.QEMU_VARS_SHA256 }}
          QEMU_VARS_SIG_URL: ${{ secrets.QEMU_VARS_SIG_URL }}
          RELEASEX64_OVMF_VARS_URL: ${{ secrets.RELEASEX64_OVMF_VARS_URL }}
          RELEASEX64_OVMF_VARS_SHA256: ${{ secrets.RELEASEX64_OVMF_VARS_SHA256 }}
        run: ./gradlew :app:firmwareQualityGate --no-daemon --stacktrace

  quality-gate-summary:
    name: Firmware Quality Gate (Summary)
    runs-on: ubuntu-latest
    needs: [ firmware, secure-firmware ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Run Consolidated Quality Gate (default variant)
        env:
          QEMU_VARS_URL: ${{ secrets.QEMU_VARS_URL }}
          QEMU_VARS_SHA256: ${{ secrets.QEMU_VARS_SHA256 }}
          QEMU_VARS_SIG_URL: ${{ secrets.QEMU_VARS_SIG_URL }}
          RELEASEX64_OVMF_VARS_URL: ${{ secrets.RELEASEX64_OVMF_VARS_URL }}
          RELEASEX64_OVMF_VARS_SHA256: ${{ secrets.RELEASEX64_OVMF_VARS_SHA256 }}
          QEMU_VARS_VARIANT: default
        run: ./gradlew :app:firmwareQualityGate --no-daemon --stacktrace
