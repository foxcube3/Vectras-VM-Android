plugins {
    alias(myLibs.plugins.android.library)
    id 'maven-publish'
}

android {
    namespace "com.termux.terminal"
    compileSdk rootProject.ext.compileApi

    externalNativeBuild {
        cmake {
            path file("src/main/cpp/CMakeLists.txt")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            externalNativeBuild {
                cmake {
                    // Enable a RelWithDebInfo style variant: optimize but retain symbols for post-mortem debugging
                    // (Gradle/AGP maps to CMAKE_BUILD_TYPE automatically per variant; ensure flags below)
                    arguments "-DCMAKE_BUILD_TYPE=RelWithDebInfo"
                }
            }
        }
    }

    defaultConfig {
    minSdkVersion rootProject.ext.minApi
    targetSdkVersion rootProject.ext.targetApi
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
        ndk {
            // Optimize ABI set: drop 32-bit x86 unless explicitly required
            abiFilters "arm64-v8a", "armeabi-v7a", "x86_64"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
    // Enable deprecation warnings surfaced by javac
    lintOptions {
        // AGP < 8.4 style; for newer AGP use lint block if needed
        warningsAsErrors false
    }
}

tasks.withType(Test) {
    testLogging {
        events "started", "passed", "skipped", "failed"
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.annotation:annotation:1.7.1'
}

// Ensure Java 17 language level for switch expressions/rules
tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.termux'
            artifactId 'terminal-emulator'
            version '0.106.1'
            artifact("$buildDir/outputs/aar/terminal-emulator-release.aar")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/termux/termux-app")

            credentials {
                username = System.getenv("GH_USERNAME")
                password = System.getenv("GH_TOKEN")
            }
        }
    }
// ...existing code...
}